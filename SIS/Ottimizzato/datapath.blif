.model datapath
.inputs  A4 A3 A2 A1 A0 MS SA1 SA0 
.outputs SectV BarI BarO Afull Bfull Cfull


############################
#creating costant values 0/1#
############################

.subckt zero O=z
.subckt one  O=u

###########################
#checking if goes in or out#
###########################

#in
.subckt eq2b A1=A4 A0=A3 B1=z B0=u O=gi

#out
.subckt eq2b A1=A4 A0=A3 B1=u B0=z O=go

#contorllo se entra in un settore esistente
.subckt  demulti8b C2=A2 C1=A1 C0=A0 O7=er111 O6=er110 O5=er101 O4=sectA O3=er011 O2=sectB O1=sectC O0=er000 


################
#Taking A values#
################

.subckt eq2b  A1=SA1 A0=SA0 B1=z B0=u O=sta
.subckt ck    Sec=sectA B1=A4 B2=A3 O=cka
.subckt takeA A4=A4 A3=A3 A2=A2 A1=A1 A0=A0 Cs=sta Cck=cka Cpm=gi O4=ra4 O3=ra3 O2=ra2 O1=ra1 O0=ra0 Ap=app

################
#Taking B values#
################

.subckt eq2b  A1=SA1 A0=SA0 B1=u B0=z O=stb
.subckt ck    Sec=sectB B1=A4 B2=A3 O=ckb
.subckt takeB A4=A4 A3=A3 A2=A2 A1=A1 A0=A0 Cs=stb Cck=ckb Cpm=gi O4=rb4 O3=rb3 O2=rb2 O1=rb1 O0=rb0 Bp=bpp

################
#Taking C values#
################

.subckt eq2b  A1=SA1 A0=SA0 B1=u B0=u O=stc
.subckt ck    Sec=sectC B1=A4 B2=A3 O=ckc
.subckt takeC I4=A4 I3=A3 I2=A2 I1=A1 I0=A0 Cs=stc Cck=ckc Cpm=gi O4=rc4 O3=rc3 O2=rc2 O1=rc1 O0=rc0 Cp=cpp



###########################
#sector not valid (1˚ bit)#
###########################


.subckt uguale0 A4=ra4 A3=ra3 A2=ra2 A1=ra1 A0=ra0 O=ae
.subckt uguale0 A4=rb4 A3=rb3 A2=rb2 A1=rb1 A0=rb0 O=be
.subckt uguale0 A4=rc4 A3=rc3 A2=rc2 A1=rc1 A0=rc0 O=ce


.subckt  giaf      Gi=gi A=sectA B=sectB C=sectC Af=app Bf=bpp Cf=cpp O=giaf        #controllo se entra in un settore pieno
.subckt  goae      Go=go A=sectA B=sectB C=sectC Aem=ae Bem=be Cem=ce O=goae           #controllo se esce da un settore vuoto
.subckt  or6b      I6=goae I5=er111 I4=er110 I3=er101 I2=er011 I1=er000 I0=giaf O=sectv     #controllo se il settore è valido (1˚ bit)
.subckt  awc       S1=SA1 S0=SA0 MS=MS O=s0
.subckt  and       A=s0 B=sectv O=SectV


#############
#  bar  IN  #
#############
#bar open when sectv=0 e gi=1 OR during sleep

.subckt sbarraCK Slp=MS Sec=sectv D=gi O=BarI


#############
#  bar OUT  #
#############
#bar open when sectv=0 e go=1 OR during sleep

.subckt sbarraCK Slp=MS Sec=sectv D=go O=BarO


################
# last 3 bit #
################

#if A=31 then A is full
.subckt uguale31 A4=ra4 A3=ra3 A2=ra2 A1=ra1 A0=ra0 O=afull
#if B=31 then B is full
.subckt uguale31 A4=rb4 A3=rb3 A2=rb2 A1=rb1 A0=rb0 O=bfull
#if C=31 then C is full
.subckt uguale24 A4=rc4 A3=rc3 A2=rc2 A1=rc1 A0=rc0 O=cfull

#checking if the sect is full only when is day (MS=1)
.subckt  and A=MS B=afull O=Afull

.subckt  and A=MS B=bfull O=Bfull

.subckt  and A=MS B=cfull O=Cfull


##############
#block of .blif
##############

.search zero.blif
.search Awc.blif
.search And.blif
.search one.blif
.search Eq2b.blif
.search CK.blif
.search TakeA.blif
.search TakeB.blif
.search TakeC.blif
.search Uguale31.blif
.search Uguale24.blif
.search Uguale0.blif
.search Demulti8b.blif
.search Giaf.blif
.search Goae.blif
.search or6b.blif
.search SbarraCK.blif
.search And.blif
.end

